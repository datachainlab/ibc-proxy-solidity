syntax = "proto3";
package ibc.lightclients.proxy.v1;

option go_package = "github.com/datachainlab/ibc-proxy/modules/light-clients/xx-proxy/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "ibc/core/commitment/v1/commitment.proto";

message ClientState {
  option (gogoproto.goproto_getters) = false;

  // client state corresponding to proxy
  // the type must implements ClientState interface
  google.protobuf.Any proxy_client_state = 1;
  // client id corresponding to upstream on proxy
  string upstream_client_id = 2;
  // the proxy commitment prefix of the proxy chain.
  ibc.core.commitment.v1.MerklePrefix proxy_prefix = 3;
  // the ibc commitment prefix of the proxy chain
  ibc.core.commitment.v1.MerklePrefix ibc_prefix = 4;
  // a boolean value indicating whether or not to trust to create ProxyClient by the relayer
  // if true, trust that the values in each field of the client state are valid
  // if false, the client state must be setup through a channel between downstream and proxy chain. please see ./modules/proxy/keeper/relay.go
  bool trusted_setup = 5;
}

message ConsensusState {
  option (gogoproto.goproto_getters) = false;

  // consensus state corresponding to proxy
  // the type must implements ConsensusState interface
  google.protobuf.Any proxy_consensus_state = 1;
}
